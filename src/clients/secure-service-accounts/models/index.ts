/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type ApiError, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {CreateServiceAccountRequest}
 */
// @ts-ignore
export function createCreateServiceAccountRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoCreateServiceAccountRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EnableServiceAccountKeyRequest}
 */
// @ts-ignore
export function createEnableServiceAccountKeyRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEnableServiceAccountKeyRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {EnableServiceAccountRequest}
 */
// @ts-ignore
export function createEnableServiceAccountRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoEnableServiceAccountRequest;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ForgeError}
 */
// @ts-ignore
export function createForgeErrorFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoForgeError;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountPrivateKey}
 */
// @ts-ignore
export function createServiceAccountPrivateKeyFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountPrivateKey;
}
/**
 * The request body for create service account
 */
export interface CreateServiceAccountRequest extends AdditionalDataHolder, Parsable {
    /**
     * The Client ID of another server-to-server application on whose behalf the service account is being created. Do not specify a value for this attribute if you are creating a service account for the calling server-to-server application itself.**Note**: Only allowlisted Autodesk internal clients are authorized to create service accounts on behalf of another server-to-server application.
     */
    clientId?: string | null;
    /**
     * The first name of the service account. For display purposes.
     */
    firstName?: string | null;
    /**
     * The last name of the service account. For display purposes.
     */
    lastName?: string | null;
    /**
     * The name of the service account. This name must be between 5 and 100 characters, and can contain alphanumeric characters and dashes
     */
    name?: string | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ServiceAccountResponse}
 */
// @ts-ignore
export function createServiceAccountResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoServiceAccountResponse;
}
/**
 * The deserialization information for the current model
 * @param CreateServiceAccountRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoCreateServiceAccountRequest(createServiceAccountRequest: Partial<CreateServiceAccountRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "clientId": n => { createServiceAccountRequest.clientId = n.getStringValue(); },
        "firstName": n => { createServiceAccountRequest.firstName = n.getStringValue(); },
        "lastName": n => { createServiceAccountRequest.lastName = n.getStringValue(); },
        "name": n => { createServiceAccountRequest.name = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param EnableServiceAccountKeyRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEnableServiceAccountKeyRequest(enableServiceAccountKeyRequest: Partial<EnableServiceAccountKeyRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "status": n => { enableServiceAccountKeyRequest.status = n.getEnumValue<EnableServiceAccountKeyRequest_status>(EnableServiceAccountKeyRequest_statusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param EnableServiceAccountRequest The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoEnableServiceAccountRequest(enableServiceAccountRequest: Partial<EnableServiceAccountRequest> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "status": n => { enableServiceAccountRequest.status = n.getEnumValue<EnableServiceAccountRequest_status>(EnableServiceAccountRequest_statusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @param ForgeError The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoForgeError(forgeError: Partial<ForgeError> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "detail": n => { forgeError.detail = n.getStringValue(); },
        "title": n => { forgeError.title = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ServiceAccountPrivateKey The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountPrivateKey(serviceAccountPrivateKey: Partial<ServiceAccountPrivateKey> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "kid": n => { serviceAccountPrivateKey.kid = n.getStringValue(); },
        "privateKey": n => { serviceAccountPrivateKey.privateKey = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @param ServiceAccountResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoServiceAccountResponse(serviceAccountResponse: Partial<ServiceAccountResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { serviceAccountResponse.email = n.getStringValue(); },
        "serviceAccountId": n => { serviceAccountResponse.serviceAccountId = n.getStringValue(); },
    }
}
/**
 * The request body for enable or disable service account key
 */
export interface EnableServiceAccountKeyRequest extends AdditionalDataHolder, Parsable {
    /**
     * The status of the service account key
     */
    status?: EnableServiceAccountKeyRequest_status | null;
}
export type EnableServiceAccountKeyRequest_status = (typeof EnableServiceAccountKeyRequest_statusObject)[keyof typeof EnableServiceAccountKeyRequest_statusObject];
/**
 * The request body for enable or disable service account
 */
export interface EnableServiceAccountRequest extends AdditionalDataHolder, Parsable {
    /**
     * The status of the service account
     */
    status?: EnableServiceAccountRequest_status | null;
}
export type EnableServiceAccountRequest_status = (typeof EnableServiceAccountRequest_statusObject)[keyof typeof EnableServiceAccountRequest_statusObject];
/**
 * Describes an error response based on Forge specifications
 */
export interface ForgeError extends AdditionalDataHolder, ApiError, Parsable {
    /**
     * The detail property
     */
    detail?: string | null;
    /**
     * The title property
     */
    title?: string | null;
}
/**
 * Serializes information the current object
 * @param CreateServiceAccountRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeCreateServiceAccountRequest(writer: SerializationWriter, createServiceAccountRequest: Partial<CreateServiceAccountRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!createServiceAccountRequest || isSerializingDerivedType) { return; }
    writer.writeStringValue("clientId", createServiceAccountRequest.clientId);
    writer.writeStringValue("firstName", createServiceAccountRequest.firstName);
    writer.writeStringValue("lastName", createServiceAccountRequest.lastName);
    writer.writeStringValue("name", createServiceAccountRequest.name);
    writer.writeAdditionalData(createServiceAccountRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param EnableServiceAccountKeyRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEnableServiceAccountKeyRequest(writer: SerializationWriter, enableServiceAccountKeyRequest: Partial<EnableServiceAccountKeyRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!enableServiceAccountKeyRequest || isSerializingDerivedType) { return; }
    writer.writeEnumValue<EnableServiceAccountKeyRequest_status>("status", enableServiceAccountKeyRequest.status);
    writer.writeAdditionalData(enableServiceAccountKeyRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param EnableServiceAccountRequest The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeEnableServiceAccountRequest(writer: SerializationWriter, enableServiceAccountRequest: Partial<EnableServiceAccountRequest> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!enableServiceAccountRequest || isSerializingDerivedType) { return; }
    writer.writeEnumValue<EnableServiceAccountRequest_status>("status", enableServiceAccountRequest.status);
    writer.writeAdditionalData(enableServiceAccountRequest.additionalData);
}
/**
 * Serializes information the current object
 * @param ForgeError The instance to serialize from.
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeForgeError(writer: SerializationWriter, forgeError: Partial<ForgeError> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!forgeError || isSerializingDerivedType) { return; }
    writer.writeStringValue("detail", forgeError.detail);
    writer.writeStringValue("title", forgeError.title);
    writer.writeAdditionalData(forgeError.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ServiceAccountPrivateKey The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountPrivateKey(writer: SerializationWriter, serviceAccountPrivateKey: Partial<ServiceAccountPrivateKey> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!serviceAccountPrivateKey || isSerializingDerivedType) { return; }
    writer.writeStringValue("kid", serviceAccountPrivateKey.kid);
    writer.writeStringValue("privateKey", serviceAccountPrivateKey.privateKey);
    writer.writeAdditionalData(serviceAccountPrivateKey.additionalData);
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param ServiceAccountResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeServiceAccountResponse(writer: SerializationWriter, serviceAccountResponse: Partial<ServiceAccountResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!serviceAccountResponse || isSerializingDerivedType) { return; }
    writer.writeStringValue("email", serviceAccountResponse.email);
    writer.writeStringValue("serviceAccountId", serviceAccountResponse.serviceAccountId);
    writer.writeAdditionalData(serviceAccountResponse.additionalData);
}
/**
 * Describes a private key
 */
export interface ServiceAccountPrivateKey extends AdditionalDataHolder, Parsable {
    /**
     * The ID of the private key.
     */
    kid?: string | null;
    /**
     * The private key value, in PEM format.
     */
    privateKey?: string | null;
}
/**
 * Contains the details of a newly created service account
 */
export interface ServiceAccountResponse extends AdditionalDataHolder, Parsable {
    /**
     * The email address of the service account
     */
    email?: string | null;
    /**
     * The Autodesk ID of the service account
     */
    serviceAccountId?: string | null;
}
/**
 * The status of the service account key
 */
export const EnableServiceAccountKeyRequest_statusObject = {
    ENABLED: "ENABLED",
    DISABLED: "DISABLED",
} as const;
/**
 * The status of the service account
 */
export const EnableServiceAccountRequest_statusObject = {
    ENABLED: "ENABLED",
    DISABLED: "DISABLED",
} as const;
/* tslint:enable */
/* eslint-enable */
